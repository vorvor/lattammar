<?php




function motor_menu() {
  global $quid;
  $items['motor/%'] = array(
    'title' => 'Task reset',
    'page callback' => 'motor_node',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );

  $items['stat'] = array(
    'title' => 'Task reset',
    'page callback' => 'motor_stat',
    'access arguments' => array('access content'),
  );

  $items['mgeo'] = array(
    'title' => 'Mobile GEO',
    'page callback' => 'motor_mobileGEO',
    'access arguments' => array('administer content'),
  );
  
  return $items;
}

function motor_node($nid) {
  $node = node_load($nid);
  $node = node_view($node);
  print drupal_render($node);
}



function game_of_place($nid) {
  $query = db_query('SELECT * FROM {nodequeue_nodes} WHERE nid = :nid', array(':nid' => $nid))->fetchObject();
  return $query->qid;
}

function nextplace($nid) {

  $node = node_load($nid);
  
  $queues = nodequeue_load_queues_by_type($node->type);
  $subqueues = nodequeue_get_subqueues_by_node($queues, $node);
  
  $query = db_query('SELECT * FROM {nodequeue_nodes} WHERE nid = :nid', array(':nid' => $nid))->fetchObject();
  $query = db_query('SELECT nid, position FROM {nodequeue_nodes}
                    WHERE position = :pos
                    AND qid = :qid',
                    array(':pos' => $query->position + 1,
                          ':qid' => $query->qid))->fetchObject();
  
  (is_object($query)) ? $nnid = $query->nid : $nnid = 0;
  return $nnid;
}


/**
 * Implements hook_form_alter().
 */
function motor_form_alter(&$form, &$form_state, $form_id) {
  //dpm($form_state);
 
  $form['field_source_place']['und']['#default_value'][] = arg(3);
  
  $form['field_source_place']['und']['#type'] = 'hidden';
  //dpm($form);
  
  if ($form_id == "tipp_node_form") {
    $form['actions']['submit']['#value'] = 'Ott van!';
    $form['actions']['skip'] = array(
      '#markup' => l('> Kihagyom, következő helyszín', '/node/add/tipp/' . nextplace(arg(3))),
      '#weight' => 6,
      '#prefix' => '<div class="skipButton">',
      '#suffix' => '</div>',
    );
    $form['actions']['geomob'] = array(
      '#markup' => 'Itt vagyok',
      '#weight' => 6,
      '#prefix' => '<div id="geoMOB" class="skipButton imhere"><a href="#">',
      '#suffix' => '</a></div>',
    );
    
    /*
    $form['fb_comments'] = array(
      '#markup' => '<div class="fb-comments" data-href="http://lattammar.nemkf.com/node/' . arg(3) . '" data-width="100%" data-numposts="5"></div>',
      '#weight' => 100,
    );
    */
    
    
    $query = db_query('SELECT * FROM {nodequeue_nodes} WHERE nid = :nid', array(':nid' => arg(3)))->fetchObject();
    $query = db_query('SELECT * FROM {field_data_field_qid} WHERE field_qid_value = :qid', array(':qid' => $query->qid))->fetchObject();
    if (!empty($query)) {
      $def = node_load($query->entity_id);
      $lat = $def->field_point['und'][0]['lat'];
      $lon = $def->field_point['und'][0]['lon'];
      
      $form['field_point']['und'][0]['geom']['#default_value']['lat'] = $lat;
      $form['field_point']['und'][0]['geom']['#default_value']['lon'] = $lon;
    }
    $prev_tipp_nid = arg(4);
    if (isset($prev_tipp_nid)) {
      $prev_tipp = node_load(arg(4));
      $lat = $prev_tipp->field_point['und'][0]['lat'];
      $lon = $prev_tipp->field_point['und'][0]['lon'];
      
      $form['field_point']['und'][0]['geom']['#default_value']['lat'] = $lat;
      $form['field_point']['und'][0]['geom']['#default_value']['lon'] = $lon;
    }
  }

}

function prox2word($prox) {
  $prox = $prox * 1000;
  $node = node_load(arg(1));
  $place_nid = $node->field_source_place['und'][0]['nid'];
  $output = array();
  $output['text'] = 'A tipped ' . (int)($prox) . ' méterre van a helyszíntől!';
  if ($prox < 200) {
    
    $output['text'].= "ez igen!";
    $cookies = array();
    if (isset($_COOKIE['Drupal_visitor_lattammar'])) {
      $cookies = explode(',', $_COOKIE['Drupal_visitor_lattammar']);
    }
    if (!in_array($place_nid, $cookies)) {
      $cookies[] = $place_nid;
    }
    $cookies_save = implode(',', $cookies);
    user_cookie_save(array('lattammar' => $cookies_save));
  }
  $output['int'] = (int)$prox;
  return $output;
}


function solved($nid) {
  if (!isset($_COOKIE['Drupal_visitor_lattammar'])) {
    return;
  }
  $nids = explode(',' ,$_COOKIE['Drupal_visitor_lattammar']);
  $output = '';
  if (in_array($nid, $nids)) {
    $output.= '<div class="solved"></div>';;
  }
  return $output;
}

function motor_mobileGEO($nid) {
  $output = '<a href="#" onclick="geoMOB();">GET</a>';
  $node = node_load($nid); // Create a new node object
  
  foreach ($node->field_photos['und'] as $photo) {
    dpm($photo);
    $node = new stdClass();  // Create a new node object
    $node->type = 'place';  // Content type
    $node->language = LANGUAGE_NONE;  // Or e.g. 'en' if locale is enabled
    node_object_prepare($node); 
    // Create image File object and associate with Image field.
    $file = new StdClass();
    $file->uid = 1;
    $file->uri = $photo['uri'];
    $file->filemime = file_get_mimetype($file->uri);
    $file->status = 1;
    $file->display = 1;
    $file->description = "";  
    $dest = file_default_scheme() . '://';
    $file = file_copy($file, $dest);
    $node->field_photo[LANGUAGE_NONE][0] = (array)$file;
    $node = node_submit($node);
    node_save($node);
  }
  
  
  return $output;
}


function motor_block_info() {
  $blocks = array();
  $blocks['facebook_comments'] = array(
    'info' => t('FB comments'),
  );
  return $blocks;
}

function motor_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'facebook_comments':
      $block['subject'] = '';
      $block['content'] = '<div class="fb-comments" data-href="http://lattammar.nemkf.com/node/' . arg(3) . '" data-width="100%" data-numposts="5"></div>';
      break;
  }
  return $block;
}
































